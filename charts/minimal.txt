---
# Source: demo/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "demo"
---
# Source: demo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  name: "demo"
  namespace: "demo"
  labels:
    chart: 'demo-1'
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
  selector:
    app: "demo-selector"
---
# Source: demo/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "demo"
  namespace: "demo"
  labels:
    chart: 'demo-1'
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: "demo-selector"
        version: "current"
    spec:
      containers:
      - name: "demo"
        image: agilesolutions/demo:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          httpHeaders:
          - name: Content-Type
            value: application/json
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          httpHeaders:
          - name: Content-Type
            value: application/json
          initialDelaySeconds: 15
          periodSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "200m"
            memory: "300Mi"
        env:
          - name: PORT
            value : "8080"
---
# Source: demo/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "demo"
  namespace: "demo"
  labels:
    chart: 'demo-1'
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
spec:
  rules:
    - host: 'demo.local'
      http:
        paths:
          - path: '/'
            backend:
              serviceName: demo
              servicePort: http
