---
# Source: prod-env/charts/chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-chartmuseum
  labels:
    app: chartmuseum
    chart: chartmuseum-1.6.0
    heritage: "Tiller"
    release: "RELEASE-NAME"
type: Opaque
data:
  BASIC_AUTH_PASS: YWRtaW4=
  BASIC_AUTH_USER: YWRtaW4=

---
# Source: prod-env/charts/jenkins/templates/config.yaml



apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-jenkins
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>2.129-alpine</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>false</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@1.12.3">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>RELEASE-NAME-jenkins-slave</label>
              <nodeSelector></nodeSelector>
                <nodeUsageMode>NORMAL</nodeUsageMode>
              <volumes>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkins/jnlp-slave:3.10-1</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu></resourceRequestCpu>
                  <resourceRequestMemory></resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory></resourceLimitMemory>
                  <envVars>
                    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                      <key>JENKINS_URL</key>
                      <value>http://RELEASE-NAME-jenkins.default:8080</value>
                    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  </envVars>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://RELEASE-NAME-jenkins.default:8080</jenkinsUrl>
          <jenkinsTunnel>RELEASE-NAME-jenkins-agent.default:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
        <listView>
          <owner class="hudson" reference="../../.."/>
          <name>DEMO</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
          <jobNames>
            <comparator class="hudson.util.CaseInsensitiveComparator"/>
            <string>release-demo</string>
            <string>deploy-demo</string>
            <string>jira-deploy-demo</string>
          </jobNames>
          <jobFilters/>
          <columns>
            <hudson.views.StatusColumn/>
            <hudson.views.WeatherColumn/>
            <hudson.views.JobColumn/>
            <hudson.views.LastSuccessColumn/>
            <hudson.views.LastFailureColumn/>
            <hudson.views.LastDurationColumn/>
            <hudson.views.BuildButtonColumn/>
            <hudson.plugins.favorite.column.FavoriteColumn plugin="favorite@2.3.2"/>
          </columns>
          <recurse>false</recurse>
        </listView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <disabledAgentProtocols>
        <string>JNLP-connect</string>
        <string>JNLP2-connect</string>
      </disabledAgentProtocols>
      <label></label>
      <crumbIssuer class="hudson.security.csrf.DefaultCrumbIssuer">
        <excludeClientIPFromCrumb>true</excludeClientIPFromCrumb>
      </crumbIssuer>
      <nodeProperties/>
      <globalNodeProperties/>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  com.ceilfors.jenkins.plugins.jiratrigger.JiraTriggerGlobalConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <com.ceilfors.jenkins.plugins.jiratrigger.JiraTriggerGlobalConfiguration plugin="jira-trigger@1.0.0">
      <jiraRootUrl>https://jira-uat.agilesolutions.com/</jiraRootUrl>
      <jiraUsername>jctadmin</jiraUsername>
      <jiraPassword>{AQAAABAAAAAQlXg6bFfz7H0jzCbPm5+LkHbZmf3okreva+E1MfRTEjM=}</jiraPassword>
      <jiraCommentReply>true</jiraCommentReply>
    </com.ceilfors.jenkins.plugins.jiratrigger.JiraTriggerGlobalConfiguration>
  org.thoughtslive.jenkins.plugins.jira.Config.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.thoughtslive.jenkins.plugins.jira.Config_-ConfigDescriptorImpl plugin="jira-steps@1.4.5">
      <sites>
        <org.thoughtslive.jenkins.plugins.jira.Site>
          <name>bjb</name>
          <url>https://jira-uat.agilesolutions.com/</url>
          <loginType>BASIC</loginType>
          <timeout>10000</timeout>
          <readTimeout>10000</readTimeout>
          <userName>jctadmin</userName>
          <password>{AQAAABAAAAAQ5qWnEpQwri1NT8xR4rkynQbUE1lHgJuIxEsuSe7crnY=}</password>
          <consumerKey></consumerKey>
          <privateKey></privateKey>
          <secret>{AQAAABAAAAAQz4s2cYrww9uq3yRxjbj1W1Hh2DgF4ZWPOk3+Q1yElrU=}</secret>
          <token>{AQAAABAAAAAQE6nih1Ok85YTLiqJBz3BPRc27oe5S1wuslIi1bS0L20=}</token>
        </org.thoughtslive.jenkins.plugins.jira.Site>
      </sites>
    </org.thoughtslive.jenkins.plugins.jira.Config_-ConfigDescriptorImpl>
  org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <org.jenkinsci.plugins.workflow.libs.GlobalLibraries plugin="workflow-cps-global-lib@2.13">
      <libraries>
        <org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
          <name>bjb</name>
          <retriever class="org.jenkinsci.plugins.workflow.libs.SCMSourceRetriever">
            <scm class="jenkins.plugins.git.GitSCMSource" plugin="git@3.10.0">
              <id>2ed2ea8e-c8da-4b08-89a0-16256d3c12d0</id>
              <remote>https://bitbucket.agilesolutions.com/scm/res/springboot-helm-kubernetes.git</remote>
              <credentialsId>jenkins</credentialsId>
              <traits>
                <jenkins.plugins.git.traits.BranchDiscoveryTrait/>
              </traits>
            </scm>
          </retriever>
          <defaultVersion>master</defaultVersion>
          <implicit>true</implicit>
          <allowVersionOverride>true</allowVersionOverride>
          <includeInChangesets>true</includeInChangesets>
        </org.jenkinsci.plugins.workflow.libs.LibraryConfiguration>
      </libraries>
    </org.jenkinsci.plugins.workflow.libs.GlobalLibraries>
  plugins.txt: |-
    durable-task:1.22
    workflow-durable-task-step:2.19
    workflow-cps@2.70
    blueocean:1.7.1
    credentials:2.1.18
    ec2:1.39
    git:3.10.0
    git-client:2.7.3
    github:1.29.2
    kubernetes:1.12.3
    pipeline-utility-steps:2.1.0
    pipeline-model-definition:1.3.1
    script-security:1.44
    persistent-parameter@1.1
    thinBackup:1.9
    workflow-aggregator:2.5
    ssh-slaves:1.26
    ssh-agent:1.15
    jdk-tool:1.1
    command-launcher:1.2
    pegdown-formatter:1.3
    jira-steps:1.4.5
    jira-ext:0.7
    jira-trigger@1.0.0
    jira@3.0.7
    persistent-parameter:1.0
---
# Source: prod-env/charts/jenkins/templates/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME-jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 48 --retry-delay 10 RELEASE-NAME-jenkins:8080/login
    }

---
# Source: prod-env/charts/chartmuseum/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-chartmuseum
  labels:
    app: release-name-chartmuseum
    release: "RELEASE-NAME"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"

---
# Source: prod-env/charts/jenkins/templates/home-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-jenkins
  labels:
    app: RELEASE-NAME-jenkins
    chart: "jenkins-0.16.20"
    release: "RELEASE-NAME"
    heritage: "Tiller"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"

---
# Source: prod-env/charts/jenkins/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-jenkins
  labels:
    app: RELEASE-NAME-jenkins
    chart: "jenkins-0.16.20"
    release: "RELEASE-NAME"
    heritage: "Tiller"

---
# Source: prod-env/templates/ns.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: build
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: build

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: build
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: build
  namespace: default

---
# Source: prod-env/charts/jenkins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-jenkins-role-binding
  labels:
    app: RELEASE-NAME-jenkins
    chart: "jenkins-0.16.20"
    release: "RELEASE-NAME"
    heritage: "Tiller"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-jenkins
  namespace: default

---
# Source: prod-env/charts/chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-chartmuseum
  annotations:
    {}
    
  labels:
    app: chartmuseum
    chart: chartmuseum-1.6.0
    heritage: "Tiller"
    release: "RELEASE-NAME"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: chartmuseum
    release: "RELEASE-NAME"

---
# Source: prod-env/charts/jenkins/templates/jenkins-agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-jenkins-agent
  labels:
    app: RELEASE-NAME-jenkins
    chart: "jenkins-0.16.20"
    component: "RELEASE-NAME-jenkins-master"
spec:
  ports:
    - port: 50000
      targetPort: 50000
      
      name: slavelistener
  selector:
    component: "RELEASE-NAME-jenkins-master"
  type: ClusterIP

---
# Source: prod-env/charts/jenkins/templates/jenkins-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-jenkins
  labels:
    app: RELEASE-NAME-jenkins
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "jenkins-0.16.20"
    component: "RELEASE-NAME-jenkins-master"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      
  selector:
    component: "RELEASE-NAME-jenkins-master"
  type: ClusterIP
  

---
# Source: prod-env/charts/jenkins/templates/jenkins-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-ui-test-67htq"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: RELEASE-NAME-ui-test
      image: jenkins/jenkins:2.129-alpine
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: RELEASE-NAME-jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never

---
# Source: prod-env/charts/chartmuseum/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: release-name-chartmuseum
  annotations:
    {}
    
  labels:
    app: chartmuseum
    chart: chartmuseum-1.6.0
    heritage: "Tiller"
    release: "RELEASE-NAME"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
    
  revisionHistoryLimit: 10
  template:
    metadata:
      name: release-name-chartmuseum
      annotations:
        {}
        
      labels:
        app: chartmuseum
        release: "RELEASE-NAME"
    spec:
      containers:
      - name: chartmuseum
        image: chartmuseum/chartmuseum:v0.7.1
        imagePullPolicy: IfNotPresent
        env:
        - name: "AUTH_ANONYMOUS_GET"
          value: "true"
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        - name: "BASIC_AUTH_PASS"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_PASS"
        - name: "BASIC_AUTH_USER"
          valueFrom:
            secretKeyRef:
              name: release-name-chartmuseum
              key: "BASIC_AUTH_USER"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          
        readinessProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 80m
            memory: 64Mi
          
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: release-name-chartmuseum

---
# Source: prod-env/charts/jenkins/templates/jenkins-master-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: RELEASE-NAME-jenkins
  labels:
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: "jenkins-0.16.20"
    component: "RELEASE-NAME-jenkins-master"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "RELEASE-NAME-jenkins-master"
  template:
    metadata:
      labels:
        app: RELEASE-NAME-jenkins
        heritage: "Tiller"
        release: "RELEASE-NAME"
        chart: "jenkins-0.16.20"
        component: "RELEASE-NAME-jenkins-master"
      annotations:
        checksum/config: 2d6cceacd72bb6ba97bd18518499f9e61ff5df93f06c4c1d61ffdab889303a72
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: RELEASE-NAME-jenkins
      initContainers:
        - name: "copy-default-config"
          image: "jenkins/jenkins:2.129-alpine"
          imagePullPolicy: "Always"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 50m
              memory: 256Mi
            
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
            -
              mountPath: /var/jenkins_credentials
              name: jenkins-credentials
              readOnly: true
            -
              mountPath: /var/jenkins_secrets
              name: jenkins-secrets
              readOnly: true
            -
              mountPath: /var/jenkins_plugins
              name: plugin-dir
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
      containers:
        - name: RELEASE-NAME-jenkins
          image: "jenkins/jenkins:2.129-alpine"
          imagePullPolicy: "Always"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: ""
            - name: JENKINS_OPTS
              value: ""
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          livenessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 90
            timeoutSeconds: 5
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 60
          # Resources configuration is a little hacky. This was to prevent breaking
          # changes, and should be cleanned up in the future once everybody had
          # enough time to migrate.
          resources:

            requests:
              cpu: "500m"
              memory: "500Mi"

          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            -
              mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            -
              mountPath: /var/jenkins_credentials
              name: jenkins-credentials
              readOnly: true
            -
              mountPath: /var/jenkins_secrets
              name: jenkins-secrets
              readOnly: true
            -
              mountPath: /usr/share/jenkins/ref/plugins/
              name: plugin-dir
              readOnly: false
            -
              mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false
      volumes:
      - name: jenkins-config
        configMap:
          name: RELEASE-NAME-jenkins
      - name: jenkins-credentials
        secret:
          secretName: jenkins-credentials
      - name: jenkins-secrets
        secret:
          secretName: jenkins-secrets
      - name: plugin-dir
        emptyDir: {}
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: RELEASE-NAME-jenkins
---
# Source: prod-env/charts/chartmuseum/templates/ingress.yaml

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-chartmuseum
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
  labels:
    app: chartmuseum
    chart: chartmuseum-1.6.0
    heritage: "Tiller"
    release: "RELEASE-NAME"
spec:
  rules:
  - host: cm.34.210.146.155.nip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: release-name-chartmuseum
          servicePort: 8080
---
# Source: prod-env/charts/jenkins/templates/jenkins-master-ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: 50m
    ingress.kubernetes.io/proxy-request-buffering: "off"
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
  name: RELEASE-NAME-jenkins
spec:
  rules:
  - host: "jenkins.34.210.146.155.nip.io"
    http:
      paths:
      - backend:
          serviceName: RELEASE-NAME-jenkins
          servicePort: 8080

---
# Source: prod-env/charts/chartmuseum/templates/serviceaccount.yaml

---
# Source: prod-env/charts/jenkins/templates/jenkins-master-networkpolicy.yaml


---
# Source: prod-env/charts/jenkins/templates/jobs.yaml

---
# Source: prod-env/charts/jenkins/templates/secret.yaml

---
# Source: prod-env/templates/jenkins-config.tpl

